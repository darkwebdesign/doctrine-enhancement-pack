@startuml

interface Doctrine\Common\EventSubscriber {
}

class EnhancedEventSubscriber implements Doctrine\Common\EventSubscriber {
    - $eventManager : Doctrine\Common\EventManager
    - $originalEntities : object[]
    + __construct(Doctrine\Common\EventManager $eventManager) : void
    + prePersist(Doctrine\ORM\Event\LifecycleEventArgs $args) : void
    + preUpdate(Doctrine\ORM\Event\PreUpdateEventArgs $args) : void
    + preRemove(Doctrine\ORM\Event\LifecycleEventArgs $args) : void
    + postPersist(Doctrine\ORM\Event\LifecycleEventArgs $args) : void
    + postUpdate(Doctrine\ORM\Event\LifecycleEventArgs $args) : void
    + postRemove(Doctrine\ORM\Event\LifecycleEventArgs $args) : void
    + getSubscribedEvents() : array
}

class Events {
    PRE_PERSIST = 'prePersist';
    PRE_UPDATE = 'preUpdate';
    PRE_REMOVE = 'preRemove';
    POST_PERSIST = 'postPersist';
    POST_UPDATE = 'postUpdate';
    POST_REMOVED = 'postRemove';
}

@enduml